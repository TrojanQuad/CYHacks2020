import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.Tab;
import javafx.scene.control.TabPane;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;


public class PersonalAccount {
    
    public static TabPane PersonalTabPane = new TabPane(); 
    public static Tab PersonalHome = new Tab("Home", PersonalHome()); 
    public static Tab PersonalPassStorage = new Tab("Storage",AccountStorage()); 
    public static Tab PersonalStrength = new Tab("Strength",AccountStrength()); 
    public static Tab PersonalUserAccount = new Tab("User Account",UserAccount()); 
    private static String suggestPassword;
    
    public static Pane PersonalAccountHolder(){ 
     //creates grid pane grid to be returned to window
      BorderPane topmenu = new BorderPane();
      topmenu.setPadding(new Insets(5, 5, 5, 5));
      topmenu.setTop(PersonalTabPane);
     return topmenu;
    }  
    
      public static Pane AccountStorage(){
        TextField storageUserName = new TextField();
        PasswordField storagePassWord = new PasswordField();
        TextField storageAccount = new TextField();
        Button storageSubmit = new Button("Store"); 
        ScrollPane storedPassword = new ScrollPane();
        
        GridPane PersonalPassStoragePane = new GridPane(); 
        PersonalPassStoragePane.setPadding(new Insets(6, 6, 6, 6));
        PersonalPassStoragePane.setAlignment(Pos.CENTER);
        PersonalPassStoragePane.setHgap(5);
        PersonalPassStoragePane.setVgap(5);
        PersonalPassStoragePane.add(new Label("User:"), 0,0);
        PersonalPassStoragePane.add(storageUserName, 1 ,0);
        PersonalPassStoragePane.add(new Label("Password: "), 2, 0); 
        PersonalPassStoragePane.add(storagePassWord, 3, 0);
        PersonalPassStoragePane.add(new Label("Account: "),4,0);
        PersonalPassStoragePane.add(storageAccount, 5,0); 
        PersonalPassStoragePane.add(storageSubmit, 3,1); 
        PersonalPassStoragePane.add(storedPassword, 0, 2);      
        return PersonalPassStoragePane;
    }
       public static Pane PersonalHome(){
        GridPane WorkHomePane = new GridPane();
        return WorkHomePane;
       }
       

    public static Pane AccountStrength(){
        Label password = new Label("Password: ");
        TextField userPassword = new TextField("");
        Button check = new Button("Check");
       Label suggestedPasswordLabel = new Label("Suggested Password: "); 
        
        check.setOnAction(e -> {
            suggestPassword = ("Suggested Password: "+ StrengthBackend.toStrongPassword(userPassword.getText())); 
            suggestedPasswordLabel.setText(suggestPassword);
        });
   
        GridPane strengthPane = new GridPane();
        strengthPane.setPadding(new Insets(6, 6, 6, 6));
        strengthPane.setAlignment(Pos.CENTER);
        strengthPane.setHgap(5);
        strengthPane.setVgap(5);
        strengthPane.add(password, 0, 0);
        strengthPane.add(userPassword, 1, 0);
        strengthPane.add(check, 2, 0);
        strengthPane.add(suggestedPasswordLabel, 0, 1);
        return strengthPane;
    }
    
    public static Pane UserAccount(){
            Label changePassword = new Label("Change Password: ");
        	PasswordField newPassword = new PasswordField();
        	Label confirmPass = new Label("Confirm Password: ");
        	PasswordField confirmPassword = new PasswordField();
        	Button change = new Button("Change");
        
        	GridPane workAccountPane = new GridPane();
        	workAccountPane.setPadding(new Insets(6, 6, 6, 6));
        	workAccountPane.setAlignment(Pos.CENTER);
        	workAccountPane.setHgap(5);
        	workAccountPane.setVgap(5);
        	workAccountPane.add(changePassword, 0, 0);
        	workAccountPane.add(newPassword, 1, 0);
        	workAccountPane.add(confirmPass, 0, 1);
        	workAccountPane.add(confirmPassword, 1, 1);
        	workAccountPane.add(change, 1, 2);
        
            return userAccountPane;
    }

    
}
